@*From https://stackoverflow.com/questions/59256798/how-to-use-bootstrap-modal-in-blazor-client-app*@
@inject CustomHttpClient http

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Evaluator Selections</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">                

                <h3>Select Evaluators</h3>
                <InputText @bind-Value="Email"/>               
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="SaveChangesAsync">Save changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Close</button>
            </div>
        </div>
    </div>
</div>


@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;
    public string Email;
    public Evaluator evaluator =  new Evaluator();

    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    public async Task SaveChangesAsync()
    {
        //TODO: Add email to evaluators list. RJG
        var response = await http.Secure.PostAsJsonAsync<Evaluator>("api/Evaluators", evaluator);
    }

    [Parameter]
    public List<EvaluatorSelection> EvaluatorSelections { get; set; } = new List<EvaluatorSelection>();

}